<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="DxValidationProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>124, 17</value>
  </metadata>
  <metadata name="ToolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="_TsbOk.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>